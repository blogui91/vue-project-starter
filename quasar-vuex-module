#!/usr/bin/env node

var
  command = require('commander'),
  glob = require('glob'),
  mkdirp = require('mkdirp'),
  log = require('../lib/log'),
  qfs = require('../lib/qfs');

if (!qfs.is.inAppFolder()) {
  log.fatal('Not in an App folder.')
  // ^^^ EARLY EXIT
}

command
  .usage('<template> <name including subfolder if any>')
  .on('--help', function () {
    log('  Example:')
    log()
    log('    $ quasar vuex-module hello')
    log('    # the above creates src/stores/modules/hello'.gray)
  })
  .parse(process.argv);

if (!command.args.length || command.args.length > 2) {
  command.help()
  process.exit(1)
  // ^^^ EARLY EXIT
}
else {
  generate()
}

function generate () {
  var
    name = command.args[0],
    src = qfs.get.root('templates', 'vuex-module'),
    dest = qfs.get.root('src', 'stores/modules', name),
    relativeDest = qfs.relative(dest)

  if (!qfs.exists(src)) {
    log.fatal('Template "' + (src).gray + '" does not exists.')
    // ^^^ EARLY EXIT
  }

  if (qfs.exists(dest)) {
    log.fatal('There is already a file at ' + dest.gray)
    // ^^^ EARLY EXIT
  }

  mkdirp(qfs.dirname(dest), function (err) {
    if (err) {
      log.fatal('Error creating folder for ' + 'dest'.gray)
      // ^^^ EARLY EXIT
    }

    if (qfs.copy(src, dest)) {
      log.fatal('Error while trying to generate ' + relativeDest.gray)
      // ^^^ EARLY EXIT
    }

    log.success(
      'Generated "' + name.gray + '" in ' + dest.gray
    )
  })
}
