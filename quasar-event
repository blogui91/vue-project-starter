#!/usr/bin/env node

var
  command = require('commander'),
  glob = require('glob'),
  fs = require('fs'),
  log = require('../lib/log'),
  qfs = require('../lib/qfs');

if (!qfs.is.inAppFolder()) {
  log.fatal('Not in an App folder.')
  // ^^^ EARLY EXIT
}

command
  .usage('EventHandlerName')
  .on('--help', function () {
    log('  Templates are stored in ' + '/templates'.gray)
    log()
    log('  Example:')
    log()
    log('    $ quasar event MyClassEventHandler')
    log()
    log('    # generate EventHandler file ')
    log('    $ quasar event Hello')
    log()
  })
  .parse(process.argv);

if (command.list) {
  log(' Available Component templates:'.gray)
  log()

  glob(qfs.get.root('templates', 'EventHandler.stub'), function (err, files) {
    if (err) throw err
    files.forEach(function (file) {
      log('    ' + qfs.basename(file, '.vue'))
    })
  })
}

else if (!command.args.length || command.args.length > 2) {
  command.help()
  process.exit(1)
  // ^^^ EARLY EXIT
}
else {
  generate()
}

function generate () {
  var
    name = command.args[0],
    src = qfs.get.root('templates/', 'EventHandler.stub'),
    dest = qfs.get.root('src/', 'handlers/events', name + 'EventHandler.js')

  if (!qfs.exists(src)) {
    log.fatal('Template "' + (src).gray + '" does not exist.')
  }

  if (qfs.exists(dest)) {
    log.fatal('There is already a file at ' + dest)
  }

  glob(src, function (er, files) {
    if (files.length === 1) {
      var file = files[0]
      fs.readFile(file, 'utf-8', function (err, data) {
        if (!err) {
          data = data.split('{model}').join(name)
          fs.writeFile(dest, data, function (err) {
            if (!err) {
              log.success(
                'Generated "' + name.gray + '" in ' + dest.gray
              )
            }
          })
        }
      })
    }
  })
}
